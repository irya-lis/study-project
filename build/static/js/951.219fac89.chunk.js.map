{"version":3,"file":"static/js/951.219fac89.chunk.js","mappings":"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","sources":["webpack://samurai-react/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://samurai-react/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.jsx","webpack://samurai-react/./src/components/Dialogs/Dialog/Message/Message.module.css?e757","components/Dialogs/Dialog/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__eE0tE\",\"dialogsItems\":\"Dialogs_dialogsItems__E5tN3\",\"newMessage\":\"Dialogs_newMessage__+el7l\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__mfUYZ\",\"img\":\"Dialog_img__X8FnJ\"};","import React from \"react\";\r\nimport s from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n            < div className={s.dialog}>\r\n            <NavLink to={path}>\r\n                <img className={s.img} src=\"./ava_user.jpg\" alt=\"ava user\"/>\r\n                {props.name}\r\n            </NavLink>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__tSztC\"};","import React from \"react\";\r\nimport s from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\n\r\nconst maxLength50 =  maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n            <Field component={Textarea}\r\n                   validate={[required, maxLength50]}\r\n                   rows=\"2\" cols=\"50\"\r\n                   placeholder=\"new message\"\r\n                   name=\"newMessageBody\"\r\n            />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Dialog/Message/Message\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n\r\n    let dialogsElement = state.dialogs.map(dialog => <Dialog key={dialog.id} id={dialog.id} name={dialog.name}/>);\r\n    let messagesElement = state.messages.map(message => <Message key={message.id} message={message.message}/>);\r\n    let newMessageBody = state.newMessageText;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n\r\n    }\r\n\r\n    if(!props.isAuth) return <Navigate to=\"/login\" replace={true}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElement}\r\n            </div>\r\n            <div className={s.newMessage}>\r\n                <h3>New message</h3>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\" replace={true}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\r\n"],"names":["props","path","id","_jsx","className","s","children","_jsxs","NavLink","to","src","alt","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","rows","cols","placeholder","state","dialogsPage","dialogsElement","dialogs","map","dialog","Dialog","messagesElement","messages","Message","newMessageText","isAuth","AddMessageForm","values","sendMessage","newMessageBody","Navigate","replace","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","React","Dialogs"],"sourceRoot":""}